[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar Mongo = Package.mongo.Mongo;\nvar DDP = Package['ddp-client'].DDP;\n\n/* Package-scope variables */\nvar _DDP;\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                     //\n// packages/raix_stubfence/packages/raix_stubfence.js                                  //\n//                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////\n                                                                                       //\n(function () {                                                                         // 1\n                                                                                       // 2\n///////////////////////////////////////////////////////////////////////////////////    // 3\n//                                                                               //    // 4\n// packages/raix:stubfence/util.js                                               //    // 5\n//                                                                               //    // 6\n///////////////////////////////////////////////////////////////////////////////////    // 7\n                                                                                 //    // 8\n/* global _DDP:true */                                                           // 1  // 9\n/* global Package: true */                                                       // 2  // 10\n/* global Meteor: true */                                                        // 3  // 11\n                                                                                 // 4  // 12\n_DDP = Package.ddp.LivedataTest;                                                 // 5  // 13\n                                                                                 // 6  // 14\nif (_DDP) {                                                                      // 7  // 15\n  _DDP = _DDP.Connection && _DDP.Connection.prototype;                           // 8  // 16\n} else {                                                                         // 9  // 17\n  _DDP = Meteor.connection.__proto__;                                            // 10\n}                                                                                // 11\n                                                                                 // 12\nif (!_DDP) {                                                                     // 13\n  throw new Error('Arg! Meteor just broke raix:stubfence! Please report to @raix at github, and he will work his butt off trying to fix this');\n}                                                                                // 15\n                                                                                 // 16\n///////////////////////////////////////////////////////////////////////////////////    // 25\n                                                                                       // 26\n}).call(this);                                                                         // 27\n                                                                                       // 28\n                                                                                       // 29\n                                                                                       // 30\n                                                                                       // 31\n                                                                                       // 32\n                                                                                       // 33\n(function () {                                                                         // 34\n                                                                                       // 35\n///////////////////////////////////////////////////////////////////////////////////    // 36\n//                                                                               //    // 37\n// packages/raix:stubfence/nostub.js                                             //    // 38\n//                                                                               //    // 39\n///////////////////////////////////////////////////////////////////////////////////    // 40\n                                                                                 //    // 41\nvar inFence = 0;                                                                 // 1  // 42\n                                                                                 // 2  // 43\n_DDP.stubFence = function(names, f) {                                            // 3  // 44\n  var self = this;                                                               // 4  // 45\n                                                                                 // 5  // 46\n  if (++inFence !== 1) {                                                         // 6  // 47\n    inFence--;                                                                   // 7  // 48\n    throw new Error('stubFence cannot lock since another stubFence is running'); // 8  // 49\n  }                                                                              // 9  // 50\n                                                                                 // 10\n  // Take string or array of string                                              // 11\n  if (names === ''+names) names = [names];                                       // 12\n                                                                                 // 13\n  // Carrier for super of methods                                                // 14\n  var supers = {};                                                               // 15\n                                                                                 // 16\n  // Store supers                                                                // 17\n  _.each(names, function(name) {                                                 // 18\n                                                                                 // 19\n    // Check that the method exists                                              // 20\n    if (self._methodHandlers[name]) {                                            // 21\n      supers[name] = self._methodHandlers[name];                                 // 22\n    } else {                                                                     // 23\n      throw new Error('stubFence could not find method \"' + name + '\"');         // 24\n    }                                                                            // 25\n                                                                                 // 26\n  });                                                                            // 27\n                                                                                 // 28\n  // Check that we got any supers to stubFence                                   // 29\n  if (names.length) {                                                            // 30\n                                                                                 // 31\n    // Remove the stub                                                           // 32\n    _.each(supers, function(f, name) {                                           // 33\n      self._methodHandlers[name] = null;                                         // 34\n    });                                                                          // 35\n                                                                                 // 36\n    // Run the code                                                              // 37\n    f();                                                                         // 38\n                                                                                 // 39\n    // Insert the stub again                                                     // 40\n    _.each(supers, function(f, name) {                                           // 41\n      self._methodHandlers[name] = f;                                            // 42\n    });                                                                          // 43\n  } else {                                                                       // 44\n    throw new Error('stubFence, no methods found');                              // 45\n  }                                                                              // 46\n                                                                                 // 47\n  inFence--;                                                                     // 48\n};                                                                               // 49\n                                                                                 // 50\nMongo.Collection.prototype.stubFence = function(f) {                             // 51\n  var self = this;                                                               // 52\n                                                                                 // 53\n  // Make sure we got a collection name                                          // 54\n  if (!self._name)                                                               // 55\n    throw new Error('Dont run stubFence on an annonymous collection');           // 56\n                                                                                 // 57\n  // Make sure we got a connection                                               // 58\n  if (self._connection) {                                                        // 59\n    // The main collection methods                                               // 60\n    var collectionMethods = [                                                    // 61\n      '/' + self._name + '/insert',                                              // 62\n      '/' + self._name + '/remove',                                              // 63\n      '/' + self._name + '/update'                                               // 64\n    ];                                                                           // 65\n                                                                                 // 66\n    // Run the connection stubFence                                              // 67\n    self._connection.stubFence(collectionMethods, f);                            // 68\n                                                                                 // 69\n  } else {                                                                       // 70\n    throw new Error('Dont run stubFence on a collection with no connection');    // 71\n  }                                                                              // 72\n};                                                                               // 73\n                                                                                 // 74\n///////////////////////////////////////////////////////////////////////////////////    // 116\n                                                                                       // 117\n}).call(this);                                                                         // 118\n                                                                                       // 119\n/////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['raix:stubfence'] = {};\n\n})();\n","servePath":"/packages/raix_stubfence.js","sourceMap":{"version":3,"sources":["/packages/raix_stubfence/packages/raix_stubfence.js"],"names":[],"mappingsfile":"/packages/raix_stubfence.js","sourcesContent":["(function () {\n\n///////////////////////////////////////////////////////////////////////////////////\n//                                                                               //\n// packages/raix:stubfence/util.js                                               //\n//                                                                               //\n///////////////////////////////////////////////////////////////////////////////////\n                                                                                 //\n/* global _DDP:true */                                                           // 1\n/* global Package: true */                                                       // 2\n/* global Meteor: true */                                                        // 3\n                                                                                 // 4\n_DDP = Package.ddp.LivedataTest;                                                 // 5\n                                                                                 // 6\nif (_DDP) {                                                                      // 7\n  _DDP = _DDP.Connection && _DDP.Connection.prototype;                           // 8\n} else {                                                                         // 9\n  _DDP = Meteor.connection.__proto__;                                            // 10\n}                                                                                // 11\n                                                                                 // 12\nif (!_DDP) {                                                                     // 13\n  throw new Error('Arg! Meteor just broke raix:stubfence! Please report to @raix at github, and he will work his butt off trying to fix this');\n}                                                                                // 15\n                                                                                 // 16\n///////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n///////////////////////////////////////////////////////////////////////////////////\n//                                                                               //\n// packages/raix:stubfence/nostub.js                                             //\n//                                                                               //\n///////////////////////////////////////////////////////////////////////////////////\n                                                                                 //\nvar inFence = 0;                                                                 // 1\n                                                                                 // 2\n_DDP.stubFence = function(names, f) {                                            // 3\n  var self = this;                                                               // 4\n                                                                                 // 5\n  if (++inFence !== 1) {                                                         // 6\n    inFence--;                                                                   // 7\n    throw new Error('stubFence cannot lock since another stubFence is running'); // 8\n  }                                                                              // 9\n                                                                                 // 10\n  // Take string or array of string                                              // 11\n  if (names === ''+names) names = [names];                                       // 12\n                                                                                 // 13\n  // Carrier for super of methods                                                // 14\n  var supers = {};                                                               // 15\n                                                                                 // 16\n  // Store supers                                                                // 17\n  _.each(names, function(name) {                                                 // 18\n                                                                                 // 19\n    // Check that the method exists                                              // 20\n    if (self._methodHandlers[name]) {                                            // 21\n      supers[name] = self._methodHandlers[name];                                 // 22\n    } else {                                                                     // 23\n      throw new Error('stubFence could not find method \"' + name + '\"');         // 24\n    }                                                                            // 25\n                                                                                 // 26\n  });                                                                            // 27\n                                                                                 // 28\n  // Check that we got any supers to stubFence                                   // 29\n  if (names.length) {                                                            // 30\n                                                                                 // 31\n    // Remove the stub                                                           // 32\n    _.each(supers, function(f, name) {                                           // 33\n      self._methodHandlers[name] = null;                                         // 34\n    });                                                                          // 35\n                                                                                 // 36\n    // Run the code                                                              // 37\n    f();                                                                         // 38\n                                                                                 // 39\n    // Insert the stub again                                                     // 40\n    _.each(supers, function(f, name) {                                           // 41\n      self._methodHandlers[name] = f;                                            // 42\n    });                                                                          // 43\n  } else {                                                                       // 44\n    throw new Error('stubFence, no methods found');                              // 45\n  }                                                                              // 46\n                                                                                 // 47\n  inFence--;                                                                     // 48\n};                                                                               // 49\n                                                                                 // 50\nMongo.Collection.prototype.stubFence = function(f) {                             // 51\n  var self = this;                                                               // 52\n                                                                                 // 53\n  // Make sure we got a collection name                                          // 54\n  if (!self._name)                                                               // 55\n    throw new Error('Dont run stubFence on an annonymous collection');           // 56\n                                                                                 // 57\n  // Make sure we got a connection                                               // 58\n  if (self._connection) {                                                        // 59\n    // The main collection methods                                               // 60\n    var collectionMethods = [                                                    // 61\n      '/' + self._name + '/insert',                                              // 62\n      '/' + self._name + '/remove',                                              // 63\n      '/' + self._name + '/update'                                               // 64\n    ];                                                                           // 65\n                                                                                 // 66\n    // Run the connection stubFence                                              // 67\n    self._connection.stubFence(collectionMethods, f);                            // 68\n                                                                                 // 69\n  } else {                                                                       // 70\n    throw new Error('Dont run stubFence on a collection with no connection');    // 71\n  }                                                                              // 72\n};                                                                               // 73\n                                                                                 // 74\n///////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}}]