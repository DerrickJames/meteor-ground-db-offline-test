[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nSession = Package.session.Session;\n$ = Package.jquery.$;\njQuery = Package.jquery.jQuery;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nDate = Package['es5-shim'].Date;\nparseInt = Package['es5-shim'].parseInt;\nECMAScript = Package.ecmascript.ECMAScript;\nAutoForm = Package['aldeed:autoform'].AutoForm;\nSimpleSchema = Package['aldeed:simple-schema'].SimpleSchema;\nMongoObject = Package['aldeed:simple-schema'].MongoObject;\nPlatform = Package['meteoric:ionic'].Platform;\nIonActionSheet = Package['meteoric:ionic'].IonActionSheet;\nIonBackdrop = Package['meteoric:ionic'].IonBackdrop;\nIonHeaderBar = Package['meteoric:ionic'].IonHeaderBar;\nIonKeyboard = Package['meteoric:ionic'].IonKeyboard;\nIonLoading = Package['meteoric:ionic'].IonLoading;\nIonModal = Package['meteoric:ionic'].IonModal;\nIonNavigation = Package['meteoric:ionic'].IonNavigation;\nIonPopover = Package['meteoric:ionic'].IonPopover;\nIonPopup = Package['meteoric:ionic'].IonPopup;\nIonSideMenu = Package['meteoric:ionic'].IonSideMenu;\nGround = Package['ground:db'].Ground;\nGroundDB = Package['ground:db'].GroundDB;\nRouter = Package['iron:router'].Router;\nRouteController = Package['iron:router'].RouteController;\nEJSON = Package.ejson.EJSON;\nMeteor = Package.meteor.Meteor;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package.templating.Template;\nbabelHelpers = Package['babel-runtime'].babelHelpers;\nPromise = Package.promise.Promise;\nMap = Package['ecmascript-collections'].Map;\nSet = Package['ecmascript-collections'].Set;\nIron = Package['iron:core'].Iron;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"(function(){\nTemplate.__checkName(\"layout\");\nTemplate[\"layout\"] = new Template(\"Template.layout\", (function() {\n  var view = this;\n  return Spacebars.include(view.lookupTemplate(\"ionBody\"), function() {\n    return [ \"\\n      \", Blaze._TemplateWith(function() {\n      return {\n        \"class\": Spacebars.call(\"bar-positive\")\n      };\n    }, function() {\n      return Spacebars.include(view.lookupTemplate(\"ionNavBar\"));\n    }), \"\\n      \", Spacebars.include(view.lookupTemplate(\"ionNavView\"), function() {\n      return [ \"\\n          \", Spacebars.include(view.lookupTemplate(\"yield\")), \"\\n      \" ];\n    }), \"\\n    \" ];\n  });\n}));\n\nTemplate.__checkName(\"new\");\nTemplate[\"new\"] = new Template(\"Template.new\", (function() {\n  var view = this;\n  return [ HTML.DIV({\n    \"class\": \"bar bar-header bar-positive\"\n  }, \"\\n    \", Blaze._TemplateWith(function() {\n    return {\n      path: Spacebars.call(\"contacts\"),\n      text: Spacebars.call(\"Back\")\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"ionNavBackButton\"));\n  }), \"\\n    \", HTML.Raw('<div class=\"title\">Edit Contact</div>'), \"\\n  \"), \"\\n\\n  \", Spacebars.include(view.lookupTemplate(\"ionView\"), function() {\n    return [ \"\\n      \", Blaze._TemplateWith(function() {\n      return {\n        \"class\": Spacebars.call(\"padding\")\n      };\n    }, function() {\n      return Spacebars.include(view.lookupTemplate(\"ionContent\"), function() {\n        return [ \"\\n          \", Blaze._TemplateWith(function() {\n          return {\n            schema: Spacebars.call(\"ContactsSchema\"),\n            collection: Spacebars.call(\"Contacts\"),\n            id: Spacebars.call(\"insertContactForm\"),\n            type: Spacebars.call(\"normal\"),\n            omitFields: Spacebars.call(\"createdAt, lastUpdated\")\n          };\n        }, function() {\n          return Spacebars.include(view.lookupTemplate(\"quickForm\"));\n        }), \"\\n      \" ];\n      });\n    }), \"\\n  \" ];\n  }) ];\n}));\n\nTemplate.__checkName(\"edit\");\nTemplate[\"edit\"] = new Template(\"Template.edit\", (function() {\n  var view = this;\n  return [ HTML.DIV({\n    \"class\": \"bar bar-header bar-positive\"\n  }, \"\\n      \", Blaze._TemplateWith(function() {\n    return {\n      path: Spacebars.call(\"contacts\"),\n      text: Spacebars.call(\"Back\")\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"ionNavBackButton\"));\n  }), \"\\n      \", HTML.Raw('<div class=\"title\">Edit Contact</div>'), \"\\n    \"), \"\\n\\n  \", Spacebars.include(view.lookupTemplate(\"ionView\"), function() {\n    return [ \"\\n      \", Blaze._TemplateWith(function() {\n      return {\n        \"class\": Spacebars.call(\"padding\")\n      };\n    }, function() {\n      return Spacebars.include(view.lookupTemplate(\"ionContent\"), function() {\n        return [ \"\\n        \", Blaze.If(function() {\n          return Spacebars.call(view.templateInstance().subscriptionsReady());\n        }, function() {\n          return [ \"\\n          \", Blaze._TemplateWith(function() {\n            return {\n              schema: Spacebars.call(\"ContactsSchema\"),\n              collection: Spacebars.call(\"Contacts\"),\n              id: Spacebars.call(\"editContactForm\"),\n              type: Spacebars.call(\"normal\"),\n              doc: Spacebars.call(view.lookup(\"selectedDoc\")),\n              omitFields: Spacebars.call(\"createdAt, lastUpdated\")\n            };\n          }, function() {\n            return Spacebars.include(view.lookupTemplate(\"quickForm\"));\n          }), \"\\n        \" ];\n        }, function() {\n          return [ \"\\n          \", Spacebars.include(view.lookupTemplate(\"spinner\")), \"\\n        \" ];\n        }), \"\\n      \" ];\n      });\n    }), \"\\n  \" ];\n  }) ];\n}));\n\nTemplate.__checkName(\"contacts\");\nTemplate[\"contacts\"] = new Template(\"Template.contacts\", (function() {\n  var view = this;\n  return [ Blaze._TemplateWith(function() {\n    return \"headerTitle\";\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"contentFor\"), function() {\n      return [ \"\\n    \", HTML.H1({\n        \"class\": \"title\"\n      }, \"Contacts\"), \"\\n  \" ];\n    });\n  }), \"\\n\\n  \", Blaze._TemplateWith(function() {\n    return \"headerButtonRight\";\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"contentFor\"), function() {\n      return [ \"\\n    \", HTML.A({\n        href: function() {\n          return Spacebars.mustache(view.lookup(\"pathFor\"), \"new\");\n        },\n        \"class\": \"button button-clear\"\n      }, Blaze._TemplateWith(function() {\n        return {\n          icon: Spacebars.call(\"ios-plus-empty\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"ionIcon\"));\n      })), \"\\n  \" ];\n    });\n  }), \"\\n\\n  \", Spacebars.include(view.lookupTemplate(\"ionView\"), function() {\n    return [ \"\\n      \", Spacebars.include(view.lookupTemplate(\"ionContent\"), function() {\n      return [ \"\\n          \", Blaze.If(function() {\n        return Spacebars.call(view.templateInstance().subscriptionsReady());\n      }, function() {\n        return [ \"\\n            \", Spacebars.include(view.lookupTemplate(\"ionList\"), function() {\n          return [ \"\\n             \", Blaze.Each(function() {\n            return Spacebars.call(view.lookup(\"contacts\"));\n          }, function() {\n            return [ \"\\n               \", Blaze._TemplateWith(function() {\n              return {\n                path: Spacebars.call(\"edit\"),\n                buttonRight: Spacebars.call(true)\n              };\n            }, function() {\n              return Spacebars.include(view.lookupTemplate(\"ionItem\"), function() {\n                return [ \"\\n                  \", HTML.H2(Blaze.View(\"lookup:name\", function() {\n                  return Spacebars.mustache(view.lookup(\"name\"));\n                })), \"\\n                  \", HTML.P(Blaze.View(\"lookup:email\", function() {\n                  return Spacebars.mustache(view.lookup(\"email\"));\n                })), \"\\n                  \", HTML.BUTTON({\n                  \"class\": \"button button-assertive\"\n                }, \"\\n                    \", Blaze._TemplateWith(function() {\n                  return {\n                    icon: Spacebars.call(\"close-circled\")\n                  };\n                }, function() {\n                  return Spacebars.include(view.lookupTemplate(\"ionIcon\"));\n                }), \"\\n                  \"), \"\\n               \" ];\n              });\n            }), \"\\n             \" ];\n          }), \"\\n            \" ];\n        }), \"\\n         \" ];\n      }, function() {\n        return [ \"\\n          \", Spacebars.include(view.lookupTemplate(\"spinner\")), \"\\n         \" ];\n      }), \"\\n      \" ];\n    }), \"\\n  \" ];\n  }) ];\n}));\n\n}).call(this);\n","servePath":"/client/contacts.compiled.html.js","sourceMap":{"version":3,"sources":["/client/contacts.compiled.html.js"],"names":[],"mappingsfile":"/client/contacts.compiled.html.js","sourcesContent":["\nTemplate.__checkName(\"layout\");\nTemplate[\"layout\"] = new Template(\"Template.layout\", (function() {\n  var view = this;\n  return Spacebars.include(view.lookupTemplate(\"ionBody\"), function() {\n    return [ \"\\n      \", Blaze._TemplateWith(function() {\n      return {\n        \"class\": Spacebars.call(\"bar-positive\")\n      };\n    }, function() {\n      return Spacebars.include(view.lookupTemplate(\"ionNavBar\"));\n    }), \"\\n      \", Spacebars.include(view.lookupTemplate(\"ionNavView\"), function() {\n      return [ \"\\n          \", Spacebars.include(view.lookupTemplate(\"yield\")), \"\\n      \" ];\n    }), \"\\n    \" ];\n  });\n}));\n\nTemplate.__checkName(\"new\");\nTemplate[\"new\"] = new Template(\"Template.new\", (function() {\n  var view = this;\n  return [ HTML.DIV({\n    \"class\": \"bar bar-header bar-positive\"\n  }, \"\\n    \", Blaze._TemplateWith(function() {\n    return {\n      path: Spacebars.call(\"contacts\"),\n      text: Spacebars.call(\"Back\")\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"ionNavBackButton\"));\n  }), \"\\n    \", HTML.Raw('<div class=\"title\">Edit Contact</div>'), \"\\n  \"), \"\\n\\n  \", Spacebars.include(view.lookupTemplate(\"ionView\"), function() {\n    return [ \"\\n      \", Blaze._TemplateWith(function() {\n      return {\n        \"class\": Spacebars.call(\"padding\")\n      };\n    }, function() {\n      return Spacebars.include(view.lookupTemplate(\"ionContent\"), function() {\n        return [ \"\\n          \", Blaze._TemplateWith(function() {\n          return {\n            schema: Spacebars.call(\"ContactsSchema\"),\n            collection: Spacebars.call(\"Contacts\"),\n            id: Spacebars.call(\"insertContactForm\"),\n            type: Spacebars.call(\"normal\"),\n            omitFields: Spacebars.call(\"createdAt, lastUpdated\")\n          };\n        }, function() {\n          return Spacebars.include(view.lookupTemplate(\"quickForm\"));\n        }), \"\\n      \" ];\n      });\n    }), \"\\n  \" ];\n  }) ];\n}));\n\nTemplate.__checkName(\"edit\");\nTemplate[\"edit\"] = new Template(\"Template.edit\", (function() {\n  var view = this;\n  return [ HTML.DIV({\n    \"class\": \"bar bar-header bar-positive\"\n  }, \"\\n      \", Blaze._TemplateWith(function() {\n    return {\n      path: Spacebars.call(\"contacts\"),\n      text: Spacebars.call(\"Back\")\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"ionNavBackButton\"));\n  }), \"\\n      \", HTML.Raw('<div class=\"title\">Edit Contact</div>'), \"\\n    \"), \"\\n\\n  \", Spacebars.include(view.lookupTemplate(\"ionView\"), function() {\n    return [ \"\\n      \", Blaze._TemplateWith(function() {\n      return {\n        \"class\": Spacebars.call(\"padding\")\n      };\n    }, function() {\n      return Spacebars.include(view.lookupTemplate(\"ionContent\"), function() {\n        return [ \"\\n        \", Blaze.If(function() {\n          return Spacebars.call(view.templateInstance().subscriptionsReady());\n        }, function() {\n          return [ \"\\n          \", Blaze._TemplateWith(function() {\n            return {\n              schema: Spacebars.call(\"ContactsSchema\"),\n              collection: Spacebars.call(\"Contacts\"),\n              id: Spacebars.call(\"editContactForm\"),\n              type: Spacebars.call(\"normal\"),\n              doc: Spacebars.call(view.lookup(\"selectedDoc\")),\n              omitFields: Spacebars.call(\"createdAt, lastUpdated\")\n            };\n          }, function() {\n            return Spacebars.include(view.lookupTemplate(\"quickForm\"));\n          }), \"\\n        \" ];\n        }, function() {\n          return [ \"\\n          \", Spacebars.include(view.lookupTemplate(\"spinner\")), \"\\n        \" ];\n        }), \"\\n      \" ];\n      });\n    }), \"\\n  \" ];\n  }) ];\n}));\n\nTemplate.__checkName(\"contacts\");\nTemplate[\"contacts\"] = new Template(\"Template.contacts\", (function() {\n  var view = this;\n  return [ Blaze._TemplateWith(function() {\n    return \"headerTitle\";\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"contentFor\"), function() {\n      return [ \"\\n    \", HTML.H1({\n        \"class\": \"title\"\n      }, \"Contacts\"), \"\\n  \" ];\n    });\n  }), \"\\n\\n  \", Blaze._TemplateWith(function() {\n    return \"headerButtonRight\";\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"contentFor\"), function() {\n      return [ \"\\n    \", HTML.A({\n        href: function() {\n          return Spacebars.mustache(view.lookup(\"pathFor\"), \"new\");\n        },\n        \"class\": \"button button-clear\"\n      }, Blaze._TemplateWith(function() {\n        return {\n          icon: Spacebars.call(\"ios-plus-empty\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"ionIcon\"));\n      })), \"\\n  \" ];\n    });\n  }), \"\\n\\n  \", Spacebars.include(view.lookupTemplate(\"ionView\"), function() {\n    return [ \"\\n      \", Spacebars.include(view.lookupTemplate(\"ionContent\"), function() {\n      return [ \"\\n          \", Blaze.If(function() {\n        return Spacebars.call(view.templateInstance().subscriptionsReady());\n      }, function() {\n        return [ \"\\n            \", Spacebars.include(view.lookupTemplate(\"ionList\"), function() {\n          return [ \"\\n             \", Blaze.Each(function() {\n            return Spacebars.call(view.lookup(\"contacts\"));\n          }, function() {\n            return [ \"\\n               \", Blaze._TemplateWith(function() {\n              return {\n                path: Spacebars.call(\"edit\"),\n                buttonRight: Spacebars.call(true)\n              };\n            }, function() {\n              return Spacebars.include(view.lookupTemplate(\"ionItem\"), function() {\n                return [ \"\\n                  \", HTML.H2(Blaze.View(\"lookup:name\", function() {\n                  return Spacebars.mustache(view.lookup(\"name\"));\n                })), \"\\n                  \", HTML.P(Blaze.View(\"lookup:email\", function() {\n                  return Spacebars.mustache(view.lookup(\"email\"));\n                })), \"\\n                  \", HTML.BUTTON({\n                  \"class\": \"button button-assertive\"\n                }, \"\\n                    \", Blaze._TemplateWith(function() {\n                  return {\n                    icon: Spacebars.call(\"close-circled\")\n                  };\n                }, function() {\n                  return Spacebars.include(view.lookupTemplate(\"ionIcon\"));\n                }), \"\\n                  \"), \"\\n               \" ];\n              });\n            }), \"\\n             \" ];\n          }), \"\\n            \" ];\n        }), \"\\n         \" ];\n      }, function() {\n        return [ \"\\n          \", Spacebars.include(view.lookupTemplate(\"spinner\")), \"\\n         \" ];\n      }), \"\\n      \" ];\n    }), \"\\n  \" ];\n  }) ];\n}));\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// lib/router.js                                                       //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\nRouter.configure({                                                     // 1\n  layoutTemplate: 'layout'                                             // 2\n});                                                                    //\n                                                                       //\nRouter.map(function () {                                               // 5\n  this.route('contacts', { path: '/' }), this.route('new'), this.route('edit', { path: 'edit/:_id' });\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/lib/router.js","sourceMap":{"version":3,"sources":["/lib/router.js"],"names":[],"mappings":";;;;;;;;AAAA,MAAM,CAAC,SAAS,CAAC;AACf,gBAAc,EAAE,QAAQ;CACzB,CAAC,CAAC;;AAEH,MAAM,CAAC,GAAG,CAAC,YAAW;AACpB,MAAI,CAAC,KAAK,CAAC,UAAU,EAAE,EAAC,IAAI,EAAE,GAAG,EAAC,CAAC,EACnC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EACjB,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,EAAC,IAAI,EAAE,WAAW,EAAC,CAAC;CACxC,CAAC,CAAC,sE","file":"/lib/router.js","sourcesContent":["Router.configure({\n  layoutTemplate: 'layout'\n});\n\nRouter.map(function() {\n  this.route('contacts', {path: '/'}),\n  this.route('new'),\n  this.route('edit', {path: 'edit/:_id'})\n});"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/contacts.js                                                  //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\nTemplate.contacts.onCreated(function () {                              // 1\n\tvar self = this;                                                      // 2\n\tself.autorun(function () {                                            // 3\n\t\tif (Meteor.status().connected) {                                     // 4\n\t\t\tMeteor.subscribe(\"contacts\");                                       // 5\n\t\t};                                                                   //\n\t});                                                                   //\n});                                                                    //\n                                                                       //\nTemplate.contacts.helpers({                                            // 10\n\t'contacts': function () {                                             // 11\n\t\treturn Contacts.find({});                                            // 12\n\t}                                                                     //\n});                                                                    //\n                                                                       //\nTemplate.contacts.events({                                             // 16\n\t'click .button-assertive': function (e) {                             // 17\n\t\te.preventDefault();                                                  // 18\n\t\tMeteor.call('removeContact', this._id, function (error, result) {    // 19\n\t\t\tif (error) alert(error.reason);                                     // 20\n\t\t});                                                                  //\n\t\treturn;                                                              // 22\n\t}                                                                     //\n});                                                                    //\n                                                                       //\nTemplate.edit.onCreated(function () {                                  // 26\n\tvar self = this;                                                      // 27\n\tself.autorun(function () {                                            // 28\n\t\tif (Meteor.status().connected) {                                     // 29\n\t\t\tMeteor.subscribe(\"contact\", Router.current().params._id);           // 30\n\t\t}                                                                    //\n\t});                                                                   //\n});                                                                    //\n                                                                       //\nTemplate.edit.helpers({                                                // 35\n\t'selectedDoc': function () {                                          // 36\n\t\treturn Contacts.findOne(Router.current().params._id);                // 37\n\t}                                                                     //\n});                                                                    //\n                                                                       //\nAutoForm.hooks({                                                       // 41\n\tinsertContactForm: {                                                  // 42\n\t\tonSubmit: function (insertDoc) {                                     // 43\n\t\t\tMeteor.call('addContact', insertDoc, function (error, result) {     // 44\n\t\t\t\tif (error) alert(error.reason);                                    // 45\n\t\t\t});                                                                 //\n\t\t\t$(\".back-button\").click();                                          // 47\n\t\t\treturn false;                                                       // 48\n\t\t}                                                                    //\n\t}                                                                     //\n});                                                                    //\n                                                                       //\nAutoForm.hooks({                                                       // 53\n\teditContactForm: {                                                    // 54\n\t\tonSubmit: function (insertDoc, updateDoc, currentDoc) {              // 55\n\t\t\tvar obj = { _id: Router.current().params._id, updateDoc: updateDoc };\n\t\t\tMeteor.call('editContact', obj, function (error, result) {          // 57\n\t\t\t\tif (error) alert(error.reason);                                    // 58\n\t\t\t});                                                                 //\n\t\t\t$(\".back-button\").click();                                          // 60\n\t\t\treturn false;                                                       // 61\n\t\t}                                                                    //\n\t}                                                                     //\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/contacts.js","sourceMap":{"version":3,"sources":["/client/contacts.js"],"names":[],"mappings":";;;;;;;;AAAA,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,YAAW;AACtC,KAAI,IAAI,GAAG,IAAI,CAAC;AAChB,KAAI,CAAC,OAAO,CAAC,YAAW;AACvB,MAAK,MAAM,CAAC,MAAM,EAAE,CAAC,SAAS,EAAG;AAChC,SAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;GAC1B,CAAC;EACH,CAAC,CAAC;CACL,CAAC,CAAC;;AAEH,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC;AACzB,WAAU,EAAE,YAAW;AACtB,SAAO,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;EACzB;CACD,CAAC,CAAC;;AAEH,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC;AACxB,0BAAyB,EAAE,UAAS,CAAC,EAAE;AACtC,GAAC,CAAC,cAAc,EAAE,CAAC;AACnB,QAAM,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,GAAG,EAAE,UAAS,KAAK,EAAE,MAAM,EAAE;AAC9D,OAAI,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;GAC/B,CAAC,CAAC;AACH,SAAO;EACP;CACD,CAAC,CAAC;;AAEH,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,YAAW;AAClC,KAAI,IAAI,GAAG,IAAI,CAAC;AAChB,KAAI,CAAC,OAAO,CAAC,YAAW;AACvB,MAAK,MAAM,CAAC,MAAM,EAAE,CAAC,SAAS,EAAG;AAC3B,SAAM,CAAC,SAAS,CAAC,SAAS,EAAE,MAAM,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;GAC3D;EACF,CAAC,CAAC;CACL,CAAC,CAAC;;AAEH,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC;AACrB,cAAa,EAAE,YAAW;AACzB,SAAO,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;EACrD;CACD,CAAC,CAAC;;AAEH,QAAQ,CAAC,KAAK,CAAC;AACd,kBAAiB,EAAE;AAClB,UAAQ,EAAE,UAAS,SAAS,EAAE;AAC7B,SAAM,CAAC,IAAI,CAAC,YAAY,EAAE,SAAS,EAAE,UAAS,KAAK,EAAE,MAAM,EAAE;AAC5D,QAAI,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAC/B,CAAC,CAAC;AACH,IAAC,CAAC,cAAc,CAAC,CAAC,KAAK,EAAE,CAAC;AAC1B,UAAO,KAAK,CAAC;GACb;EACD;CACD,CAAC,CAAC;;AAEH,QAAQ,CAAC,KAAK,CAAC;AACd,gBAAe,EAAE;AAChB,UAAQ,EAAE,UAAS,SAAS,EAAE,SAAS,EAAE,UAAU,EAAE;AACpD,OAAI,GAAG,GAAG,EAAC,GAAG,EAAE,MAAM,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,SAAS,EAAE,SAAS,EAAC,CAAC;AACnE,SAAM,CAAC,IAAI,CAAC,aAAa,EAAE,GAAG,EAAE,UAAS,KAAK,EAAE,MAAM,EAAE;AACvD,QAAI,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAC/B,CAAC,CAAC;AACH,IAAC,CAAC,cAAc,CAAC,CAAC,KAAK,EAAE,CAAC;AAC1B,UAAO,KAAK,CAAC;GACb;EACD;CACD,CAAC,CAAC,sE","file":"/client/contacts.js","sourcesContent":["Template.contacts.onCreated(function() {\n\tvar self = this;\n\tself.autorun(function() {\n\t\tif ( Meteor.status().connected ) {\n\t\t\tMeteor.subscribe(\"contacts\");\n    \t};\n  \t});\n});\n\nTemplate.contacts.helpers({\n\t'contacts': function() {\n\t\treturn Contacts.find({});\n\t}\n});\n\nTemplate.contacts.events({\n\t'click .button-assertive': function(e) {\n\t\te.preventDefault();\n\t\tMeteor.call('removeContact', this._id, function(error, result) {\n\t\t\tif (error) alert(error.reason);\n\t\t});\n\t\treturn;\n\t}\n});\n\nTemplate.edit.onCreated(function() {\n\tvar self = this;\n\tself.autorun(function() {\n\t\tif ( Meteor.status().connected ) {\n      \t\tMeteor.subscribe(\"contact\", Router.current().params._id);\n    \t}\n  \t});\n});\n\nTemplate.edit.helpers({\n\t'selectedDoc': function() {\n\t\treturn Contacts.findOne(Router.current().params._id);\n\t}\n});\n\nAutoForm.hooks({\n\tinsertContactForm: {\n\t\tonSubmit: function(insertDoc) {\n\t\t\tMeteor.call('addContact', insertDoc, function(error, result) {\n\t\t\t\tif (error) alert(error.reason);\n\t\t\t});\n\t\t\t$(\".back-button\").click();\n\t\t\treturn false;\n\t\t}\n\t}\n});\n\nAutoForm.hooks({\n\teditContactForm: {\n\t\tonSubmit: function(insertDoc, updateDoc, currentDoc) {\n\t\t\tvar obj = {_id: Router.current().params._id, updateDoc: updateDoc};\n\t\t\tMeteor.call('editContact', obj, function(error, result) {\n\t\t\t\tif (error) alert(error.reason);\n\t\t\t});\n\t\t\t$(\".back-button\").click();\n\t\t\treturn false;\n\t\t}\n\t}\n});"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/init.js                                                      //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\nMeteor.startup(function () {                                           // 1\n\tif (Meteor.isCordova) Meteor.subscribe(\"contacts\");                   // 2\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/init.js","sourceMap":{"version":3,"sources":["/client/init.js"],"names":[],"mappings":";;;;;;;;AAAA,MAAM,CAAC,OAAO,CAAC,YAAY;AAC1B,KAAI,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;CACnD,CAAC,CAAC,sE","file":"/client/init.js","sourcesContent":["Meteor.startup(function () {\n\tif (Meteor.isCordova) Meteor.subscribe(\"contacts\");\n});"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// collections/contacts.js                                             //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\nContactsSchema = new SimpleSchema({                                    // 1\n  name: {                                                              // 2\n    type: String,                                                      // 3\n    min: 3,                                                            // 4\n    max: 20                                                            // 5\n  },                                                                   //\n  email: {                                                             // 7\n    type: String                                                       // 8\n  },                                                                   //\n  createdAt: {                                                         // 10\n    type: Date,                                                        // 11\n    optional: true                                                     // 12\n  },                                                                   //\n  lastUpdated: {                                                       // 14\n    type: Date,                                                        // 15\n    optional: true                                                     // 16\n  }                                                                    //\n});                                                                    //\n                                                                       //\nContacts = new Meteor.Collection('Contacts');                          // 20\n                                                                       //\nif (Meteor.isCordova) Ground.Collection(Contacts);                     // 22\n                                                                       //\nMeteor.methods({                                                       // 24\n  addContact: function (doc) {                                         // 25\n    check(doc, ContactsSchema);                                        // 26\n    var obj = { name: doc.name, email: doc.email, createdAt: new Date() };\n    return Contacts.insert(obj);                                       // 28\n  },                                                                   //\n  editContact: function (obj) {                                        // 30\n    _.extend(obj.updateDoc.$set, { lastUpdated: new Date() });         // 31\n    check(obj._id, String);                                            // 32\n    check(obj.updateDoc.$set, ContactsSchema);                         // 33\n    return Contacts.update({ _id: obj._id }, obj.updateDoc);           // 34\n  },                                                                   //\n  removeContact: function (id) {                                       // 36\n    check(id, String);                                                 // 37\n    return Contacts.remove(id);                                        // 38\n  }                                                                    //\n});                                                                    //\n                                                                       //\nif (Meteor.isClient) {                                                 // 42\n  Ground.methodResume(['addContact', 'editContact', 'removeContact']);\n}                                                                      //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/collections/contacts.js","sourceMap":{"version":3,"sources":["/collections/contacts.js"],"names":[],"mappings":";;;;;;;;AAAA,cAAc,GAAG,IAAI,YAAY,CAAC;AAChC,MAAI,EAAE;AACJ,QAAI,EAAE,MAAM;AACZ,OAAG,EAAE,CAAC;AACN,OAAG,EAAE,EAAE;GACR;AACD,OAAK,EAAE;AACL,QAAI,EAAE,MAAM;GACb;AACD,WAAS,EAAE;AACT,QAAI,EAAE,IAAI;AACV,YAAQ,EAAE,IAAI;GACf;AACD,aAAW,EAAE;AACX,QAAI,EAAE,IAAI;AACV,YAAQ,EAAE,IAAI;GACf;CACF,CAAC,CAAC;;AAEH,QAAQ,GAAG,IAAI,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;;AAE7C,IAAI,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;;AAElD,MAAM,CAAC,OAAO,CAAC;AACb,YAAU,EAAE,UAAS,GAAG,EAAE;AACxB,SAAK,CAAC,GAAG,EAAE,cAAc,CAAC,CAAC;AAC3B,QAAI,GAAG,GAAG,EAAC,IAAI,EAAE,GAAG,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC,KAAK,EAAE,SAAS,EAAE,IAAI,IAAI,IAAC,CAAC;AAClE,WAAO,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;GAC7B;AACD,aAAW,EAAE,UAAS,GAAG,EAAE;AACzB,KAAC,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,EAAE,EAAC,WAAW,EAAE,IAAI,IAAI,IAAC,CAAC,CAAC;AACtD,SAAK,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;AACvB,SAAK,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;AAC1C,WAAO,QAAQ,CAAC,MAAM,CAAC,EAAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAC,EAAE,GAAG,CAAC,SAAS,CAAC,CAAC;GACvD;AACD,eAAa,EAAE,UAAS,EAAE,EAAE;AAC1B,SAAK,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;AAClB,WAAO,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;GAC5B;CACF,CAAC,CAAC;;AAEH,IAAK,MAAM,CAAC,QAAQ,EAAG;AACrB,QAAM,CAAC,YAAY,CAAC,CAChB,YAAY,EACZ,aAAa,EACb,eAAe,CAClB,CAAC,CAAC;CACJ,wE","file":"/collections/contacts.js","sourcesContent":["ContactsSchema = new SimpleSchema({\n  name: {\n    type: String,\n    min: 3,\n    max: 20\n  },\n  email: {\n    type: String\n  },\n  createdAt: {\n    type: Date,\n    optional: true\n  },\n  lastUpdated: {\n    type: Date,\n    optional: true\n  }\n});\n\nContacts = new Meteor.Collection('Contacts');\n\nif (Meteor.isCordova) Ground.Collection(Contacts);\n\nMeteor.methods({\n  addContact: function(doc) {\n    check(doc, ContactsSchema);\n    var obj = {name: doc.name, email: doc.email, createdAt: new Date};\n    return Contacts.insert(obj);\n  },\n  editContact: function(obj) {\n    _.extend(obj.updateDoc.$set, {lastUpdated: new Date});\n    check(obj._id, String);\n    check(obj.updateDoc.$set, ContactsSchema);\n    return Contacts.update({_id: obj._id}, obj.updateDoc);\n  },\n  removeContact: function(id) {\n    check(id, String);\n    return Contacts.remove(id);\n  }\n});\n\nif ( Meteor.isClient ) {\n  Ground.methodResume([\n      'addContact',\n      'editContact',\n      'removeContact'\n  ]);\n}"]}}]