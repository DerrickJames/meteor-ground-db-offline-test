[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\n\n/* Package-scope variables */\nvar Dictionary;\n\n(function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                       //\n// packages/ground_dictionary/packages/ground_dictionary.js                                              //\n//                                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                         //\n(function () {                                                                                           // 1\n                                                                                                         // 2\n////////////////////////////////////////////////////////////////////////////////////////////////////     // 3\n//                                                                                                //     // 4\n// packages/ground:dictionary/dictionary.js                                                       //     // 5\n//                                                                                                //     // 6\n////////////////////////////////////////////////////////////////////////////////////////////////////     // 7\n                                                                                                  //     // 8\nvar _splice = function(array, begin) {                                                            // 1   // 9\n  var result = [];                                                                                // 2   // 10\n                                                                                                  // 3   // 11\n  begin = begin || 0;                                                                             // 4   // 12\n                                                                                                  // 5   // 13\n  // Add the ones we need                                                                         // 6   // 14\n  for (var i = begin; i < array.length; i++)                                                      // 7   // 15\n    result.push(array[i]);                                                                        // 8   // 16\n                                                                                                  // 9   // 17\n  return result;                                                                                  // 10  // 18\n};                                                                                                // 11  // 19\n                                                                                                  // 12  // 20\nDictionary = function(list) {                                                                     // 13  // 21\n  var self = this;                                                                                // 14  // 22\n  // Dictionary                                                                                   // 15  // 23\n  self.lookupString = {};                                                                         // 16  // 24\n  self.lookupNumber = {};                                                                         // 17  // 25\n  self.lookupDate = {}; // Special lookup making sure date lookups are acurate                    // 18  // 26\n  self.lookupBoolean = {};                                                                        // 19  // 27\n                                                                                                  // 20  // 28\n  self.list = [];                                                                                 // 21  // 29\n                                                                                                  // 22  // 30\n  self.initial = [];                                                                              // 23  // 31\n                                                                                                  // 24  // 32\n  // If user sets a list                                                                          // 25  // 33\n  if (list instanceof Dictionary) {                                                               // 26  // 34\n    // Clone the initial list                                                                     // 27  // 35\n    self.initial = list.clone();                                                                  // 28  // 36\n    // We set the clone                                                                           // 29  // 37\n    self.set(list.clone());                                                                       // 30  // 38\n  } else if (list) {                                                                              // 31  // 39\n    // Clone the array                                                                            // 32  // 40\n    self.initial = _splice(list);                                                                 // 33  // 41\n    // Just set the list                                                                          // 34  // 42\n    self.set(list);                                                                               // 35  // 43\n  }                                                                                               // 36  // 44\n                                                                                                  // 37  // 45\n};                                                                                                // 38  // 46\n                                                                                                  // 39  // 47\nDictionary.prototype.lookup = function(key) {                                                     // 40  // 48\n  var self = this;                                                                                // 41  // 49\n                                                                                                  // 42  // 50\n  var lookup = self.lookupString;                                                                 // 43  // 51\n                                                                                                  // 44  // 52\n  if (key instanceof Date) {                                                                      // 45  // 53\n    lookup = self.lookupDate;                                                                     // 46  // 54\n    key = +key;                                                                                   // 47  // 55\n  } else if (key === +key) {                                                                      // 48  // 56\n    lookup = self.lookupNumber;                                                                   // 49  // 57\n  } else if (key === !!key) {                                                                     // 50  // 58\n    lookup = self.lookupBoolean;                                                                  // 51  // 59\n  }                                                                                               // 52  // 60\n                                                                                                  // 53  // 61\n  if (arguments.length === 2) {                                                                   // 54  // 62\n    // Setter                                                                                     // 55  // 63\n    lookup[key] = arguments[1];                                                                   // 56  // 64\n  }                                                                                               // 57  // 65\n                                                                                                  // 58  // 66\n  return lookup[key];                                                                             // 59  // 67\n};                                                                                                // 60  // 68\n                                                                                                  // 61  // 69\nDictionary.prototype.add = function(value) {                                                      // 62  // 70\n  var self = this;                                                                                // 63  // 71\n  // Make sure not to add existing values / words                                                 // 64  // 72\n  if (!self.exists(value)) {                                                                      // 65  // 73\n    // Add value to keyword list                                                                  // 66  // 74\n    // We return the index - note this can be 0 :)                                                // 67  // 75\n    var index = this.list.push(value) - 1;                                                        // 68  // 76\n    // Set the normal lookup                                                                      // 69  // 77\n    this.lookup(value, index);                                                                    // 70  // 78\n  }                                                                                               // 71  // 79\n                                                                                                  // 72  // 80\n  return this.index(value);                                                                       // 73  // 81\n};                                                                                                // 74  // 82\n                                                                                                  // 75  // 83\nDictionary.prototype.addList = function(list) {                                                   // 76  // 84\n  // Iterate over the list of values                                                              // 77  // 85\n  if (list)                                                                                       // 78  // 86\n    for (var i = 0; i < list.length; i++)                                                         // 79  // 87\n      this.add(list[i]);                                                                          // 80  // 88\n};                                                                                                // 81  // 89\n                                                                                                  // 82  // 90\nDictionary.prototype.set = function(list) {                                                       // 83  // 91\n  // Reset the this.lookup                                                                        // 84  // 92\n  this.lookupString = {};                                                                         // 85  // 93\n  this.lookupNumber = {};                                                                         // 86  // 94\n  this.lookupBoolean = {};                                                                        // 87  // 95\n  this.lookupDate = {};                                                                           // 88  // 96\n  this.list = [];                                                                                 // 89  // 97\n  // Add the list                                                                                 // 90  // 98\n  this.addList(list);                                                                             // 91  // 99\n};                                                                                                // 92  // 100\n                                                                                                  // 93  // 101\nDictionary.prototype.remove = function(value) {                                                   // 94  // 102\n  var self = this;                                                                                // 95  // 103\n  // Make sure theres something to remove                                                         // 96  // 104\n  if (self.exists(value)) {                                                                       // 97  // 105\n    var result = [];                                                                              // 98  // 106\n    // copy the this.lookup                                                                       // 99  // 107\n    for (var i = 0; i < this.list.length; i++)                                                    // 100\n      if (i !== self.index(value)) result.push(this.list[i]);                                     // 101\n    // Set the new list of this.lookup                                                            // 102\n    this.set(result);                                                                             // 103\n  }                                                                                               // 104\n};                                                                                                // 105\n                                                                                                  // 106\nDictionary.prototype.withoutInitial = function() {                                                // 107\n  return _splice(this.list, this.initial.length);                                                 // 108\n};                                                                                                // 109\n                                                                                                  // 110\nDictionary.prototype.value = function(index) {                                                    // 111\n  return this.list[index];                                                                        // 112\n};                                                                                                // 113\n                                                                                                  // 114\nDictionary.prototype.index = function(value) {                                                    // 115\n  // We have to use the Date lookup in order to get the correct lookup value                      // 116\n  // otherwise there are some slight diviation in the result - We want this                       // 117\n  // 100% accurate                                                                                // 118\n  return this.lookup(value);                                                                      // 119\n};                                                                                                // 120\n                                                                                                  // 121\nDictionary.prototype.exists = function(value) {                                                   // 122\n  return (typeof this.index(value) !== 'undefined');                                              // 123\n};                                                                                                // 124\n                                                                                                  // 125\nDictionary.prototype.clone = function() {                                                         // 126\n  return _splice(this.list);                                                                      // 127\n};                                                                                                // 128\n                                                                                                  // 129\nDictionary.prototype.toArray = function() {                                                       // 130\n  return this.list;                                                                               // 131\n};                                                                                                // 132\n                                                                                                  // 133\nDictionary.prototype.toObject = function() {                                                      // 134\n  return _.extend({}, this.lookupString, this.lookupNumber, this.lookupDate, this.lookupBoolean); // 135\n};                                                                                                // 136\n                                                                                                  // 137\n////////////////////////////////////////////////////////////////////////////////////////////////////     // 146\n                                                                                                         // 147\n}).call(this);                                                                                           // 148\n                                                                                                         // 149\n///////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['ground:dictionary'] = {\n  Dictionary: Dictionary\n};\n\n})();\n","servePath":"/packages/ground_dictionary.js","sourceMap":{"version":3,"sources":["/packages/ground_dictionary/packages/ground_dictionary.js"],"names":[],"mappingsfile":"/packages/ground_dictionary.js","sourcesContent":["(function () {\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                //\n// packages/ground:dictionary/dictionary.js                                                       //\n//                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                  //\nvar _splice = function(array, begin) {                                                            // 1\n  var result = [];                                                                                // 2\n                                                                                                  // 3\n  begin = begin || 0;                                                                             // 4\n                                                                                                  // 5\n  // Add the ones we need                                                                         // 6\n  for (var i = begin; i < array.length; i++)                                                      // 7\n    result.push(array[i]);                                                                        // 8\n                                                                                                  // 9\n  return result;                                                                                  // 10\n};                                                                                                // 11\n                                                                                                  // 12\nDictionary = function(list) {                                                                     // 13\n  var self = this;                                                                                // 14\n  // Dictionary                                                                                   // 15\n  self.lookupString = {};                                                                         // 16\n  self.lookupNumber = {};                                                                         // 17\n  self.lookupDate = {}; // Special lookup making sure date lookups are acurate                    // 18\n  self.lookupBoolean = {};                                                                        // 19\n                                                                                                  // 20\n  self.list = [];                                                                                 // 21\n                                                                                                  // 22\n  self.initial = [];                                                                              // 23\n                                                                                                  // 24\n  // If user sets a list                                                                          // 25\n  if (list instanceof Dictionary) {                                                               // 26\n    // Clone the initial list                                                                     // 27\n    self.initial = list.clone();                                                                  // 28\n    // We set the clone                                                                           // 29\n    self.set(list.clone());                                                                       // 30\n  } else if (list) {                                                                              // 31\n    // Clone the array                                                                            // 32\n    self.initial = _splice(list);                                                                 // 33\n    // Just set the list                                                                          // 34\n    self.set(list);                                                                               // 35\n  }                                                                                               // 36\n                                                                                                  // 37\n};                                                                                                // 38\n                                                                                                  // 39\nDictionary.prototype.lookup = function(key) {                                                     // 40\n  var self = this;                                                                                // 41\n                                                                                                  // 42\n  var lookup = self.lookupString;                                                                 // 43\n                                                                                                  // 44\n  if (key instanceof Date) {                                                                      // 45\n    lookup = self.lookupDate;                                                                     // 46\n    key = +key;                                                                                   // 47\n  } else if (key === +key) {                                                                      // 48\n    lookup = self.lookupNumber;                                                                   // 49\n  } else if (key === !!key) {                                                                     // 50\n    lookup = self.lookupBoolean;                                                                  // 51\n  }                                                                                               // 52\n                                                                                                  // 53\n  if (arguments.length === 2) {                                                                   // 54\n    // Setter                                                                                     // 55\n    lookup[key] = arguments[1];                                                                   // 56\n  }                                                                                               // 57\n                                                                                                  // 58\n  return lookup[key];                                                                             // 59\n};                                                                                                // 60\n                                                                                                  // 61\nDictionary.prototype.add = function(value) {                                                      // 62\n  var self = this;                                                                                // 63\n  // Make sure not to add existing values / words                                                 // 64\n  if (!self.exists(value)) {                                                                      // 65\n    // Add value to keyword list                                                                  // 66\n    // We return the index - note this can be 0 :)                                                // 67\n    var index = this.list.push(value) - 1;                                                        // 68\n    // Set the normal lookup                                                                      // 69\n    this.lookup(value, index);                                                                    // 70\n  }                                                                                               // 71\n                                                                                                  // 72\n  return this.index(value);                                                                       // 73\n};                                                                                                // 74\n                                                                                                  // 75\nDictionary.prototype.addList = function(list) {                                                   // 76\n  // Iterate over the list of values                                                              // 77\n  if (list)                                                                                       // 78\n    for (var i = 0; i < list.length; i++)                                                         // 79\n      this.add(list[i]);                                                                          // 80\n};                                                                                                // 81\n                                                                                                  // 82\nDictionary.prototype.set = function(list) {                                                       // 83\n  // Reset the this.lookup                                                                        // 84\n  this.lookupString = {};                                                                         // 85\n  this.lookupNumber = {};                                                                         // 86\n  this.lookupBoolean = {};                                                                        // 87\n  this.lookupDate = {};                                                                           // 88\n  this.list = [];                                                                                 // 89\n  // Add the list                                                                                 // 90\n  this.addList(list);                                                                             // 91\n};                                                                                                // 92\n                                                                                                  // 93\nDictionary.prototype.remove = function(value) {                                                   // 94\n  var self = this;                                                                                // 95\n  // Make sure theres something to remove                                                         // 96\n  if (self.exists(value)) {                                                                       // 97\n    var result = [];                                                                              // 98\n    // copy the this.lookup                                                                       // 99\n    for (var i = 0; i < this.list.length; i++)                                                    // 100\n      if (i !== self.index(value)) result.push(this.list[i]);                                     // 101\n    // Set the new list of this.lookup                                                            // 102\n    this.set(result);                                                                             // 103\n  }                                                                                               // 104\n};                                                                                                // 105\n                                                                                                  // 106\nDictionary.prototype.withoutInitial = function() {                                                // 107\n  return _splice(this.list, this.initial.length);                                                 // 108\n};                                                                                                // 109\n                                                                                                  // 110\nDictionary.prototype.value = function(index) {                                                    // 111\n  return this.list[index];                                                                        // 112\n};                                                                                                // 113\n                                                                                                  // 114\nDictionary.prototype.index = function(value) {                                                    // 115\n  // We have to use the Date lookup in order to get the correct lookup value                      // 116\n  // otherwise there are some slight diviation in the result - We want this                       // 117\n  // 100% accurate                                                                                // 118\n  return this.lookup(value);                                                                      // 119\n};                                                                                                // 120\n                                                                                                  // 121\nDictionary.prototype.exists = function(value) {                                                   // 122\n  return (typeof this.index(value) !== 'undefined');                                              // 123\n};                                                                                                // 124\n                                                                                                  // 125\nDictionary.prototype.clone = function() {                                                         // 126\n  return _splice(this.list);                                                                      // 127\n};                                                                                                // 128\n                                                                                                  // 129\nDictionary.prototype.toArray = function() {                                                       // 130\n  return this.list;                                                                               // 131\n};                                                                                                // 132\n                                                                                                  // 133\nDictionary.prototype.toObject = function() {                                                      // 134\n  return _.extend({}, this.lookupString, this.lookupNumber, this.lookupDate, this.lookupBoolean); // 135\n};                                                                                                // 136\n                                                                                                  // 137\n////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}}]