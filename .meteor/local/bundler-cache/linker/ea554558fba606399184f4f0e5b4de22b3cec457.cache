[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar _ = Package.underscore._;\nvar MongoID = Package['mongo-id'].MongoID;\nvar Mongo = Package.mongo.Mongo;\nvar DDP = Package['ddp-client'].DDP;\nvar Random = Package.random.Random;\nvar LocalCollection = Package.minimongo.LocalCollection;\nvar Minimongo = Package.minimongo.Minimongo;\nvar EJSON = Package.ejson.EJSON;\nvar ReactiveVar = Package['reactive-var'].ReactiveVar;\nvar MiniMax = Package['ground:minimax'].MiniMax;\nvar Tracker = Package.tracker.Tracker;\nvar Deps = Package.tracker.Deps;\n\n/* Package-scope variables */\nvar _groundUtil, Ground;\n\n(function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// packages/ground_util/util.common.js                                                              //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\n/* global _groundUtil:true */                                                                       // 1\n/* global Ground:true */                                                                            // 2\n// Define the utillity scope                                                                        // 3\n_groundUtil = {};                                                                                   // 4\n                                                                                                    // 5\n// New ground scope                                                                                 // 6\nGround = {};                                                                                        // 7\n                                                                                                    // 8\n// Meteor.Collection or Mongo.Collection                                                            // 9\n_groundUtil.Collection = (typeof Mongo !== 'undefined')?                                            // 10\n        Mongo.Collection: Meteor.Collection;                                                        // 11\n                                                                                                    // 12\n                                                                                                    // 13\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                  //\n// packages/ground_util/util.client.js                                                              //\n//                                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                    //\n/* global _groundUtil:false */                                                                      // 1\n////////////////////////////////////////////////////////////////////////////////                    // 2\n// MAP METEOR API's                                                                                 // 3\n////////////////////////////////////////////////////////////////////////////////                    // 4\n                                                                                                    // 5\n// Access the DDP connection class                                                                  // 6\nvar _DDP;                                                                                           // 7\n                                                                                                    // 8\ntry {                                                                                               // 9\n  _DDP = Package.ddp.LivedataTest;                                                                  // 10\n  _DDP = _DDP.Connection;                                                                           // 11\n                                                                                                    // 12\n} catch(err) {                                                                                      // 13\n  _DDP = Meteor.connection.constructor;                                                             // 14\n}                                                                                                   // 15\n                                                                                                    // 16\n_groundUtil.Connection = _DDP;                                                                      // 17\n                                                                                                    // 18\nif (!_DDP) {                                                                                        // 19\n  throw new Error('GroundDB cannot access the DDP.Connection class');                               // 20\n}                                                                                                   // 21\n                                                                                                    // 22\n// Meteor connection                                                                                // 23\n_groundUtil.connection = _groundUtil.connection || Meteor.default_connection; // jshint ignore:line\n                                                                                                    // 25\n// ParseId function                                                                                 // 26\n_groundUtil.idParse = LocalCollection && LocalCollection._idParse ||                                // 27\n        Meteor.idParse || MongoID.idParse;                                                          // 28\n                                                                                                    // 29\n// Get the database map                                                                             // 30\n_groundUtil.getDatabaseMap = function(col) {                                                        // 31\n  // XXX: Suport older styles?                                                                      // 32\n  return col._collection._docs._map;                                                                // 33\n};                                                                                                  // 34\n                                                                                                    // 35\n_groundUtil.setDatabaseMap = function(col, map) {                                                   // 36\n  // XXX: Suport older styles?                                                                      // 37\n  col._collection._docs._map = map;                                                                 // 38\n};                                                                                                  // 39\n                                                                                                    // 40\n_groundUtil.invalidateDb = function(col) {                                                          // 41\n  // We need to invalidate all listening queries                                                    // 42\n  _.each(col._collection.queries, function(query) {                                                 // 43\n    // This db has changed big time...                                                              // 44\n    query.changed();                                                                                // 45\n  });                                                                                               // 46\n};                                                                                                  // 47\n                                                                                                    // 48\n// State of all subscriptions in meteor                                                             // 49\nvar _subscriptionsReady = new ReactiveVar(false);                                                   // 50\n                                                                                                    // 51\n//////////////////////////// ALL SUBSCRIPTIONS READY ///////////////////////////                    // 52\n                                                                                                    // 53\n_groundUtil.allSubscriptionsReady = function() {                                                    // 54\n  return _subscriptionsReady.get();                                                                 // 55\n};                                                                                                  // 56\n                                                                                                    // 57\n// Could be nice to have a Meteor.allSubscriptionsReady                                             // 58\nvar readyInterval = Meteor.setInterval(function() {                                                 // 59\n  if (DDP._allSubscriptionsReady()) {                                                               // 60\n    // Stop this madness                                                                            // 61\n    Meteor.clearInterval(readyInterval);                                                            // 62\n    // Set the reactive var                                                                         // 63\n    _subscriptionsReady.set(true);                                                                  // 64\n  }                                                                                                 // 65\n}, 1000);                                                                                           // 66\n                                                                                                    // 67\n//////////////////////////////// UNDERSCORE DEPS ///////////////////////////////                    // 68\n                                                                                                    // 69\n_groundUtil.each = _.each;                                                                          // 70\n                                                                                                    // 71\n_groundUtil.toArray = _.toArray;                                                                    // 72\n                                                                                                    // 73\n_groundUtil.extend = _.extend;                                                                      // 74\n                                                                                                    // 75\n//////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\nPackage['ground:util'] = {\n  _groundUtil: _groundUtil,\n  Ground: Ground\n};\n\n})();\n","servePath":"/packages/ground_util.js","sourceMap":{"version":3,"sources":["/packages/ground_util/util.common.js","/packages/ground_util/util.client.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yG;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yG","file":"/packages/ground_util.js","sourcesContent":["/* global _groundUtil:true */\n/* global Ground:true */\n// Define the utillity scope\n_groundUtil = {};\n\n// New ground scope\nGround = {};\n\n// Meteor.Collection or Mongo.Collection\n_groundUtil.Collection = (typeof Mongo !== 'undefined')?\n        Mongo.Collection: Meteor.Collection;\n\n","/* global _groundUtil:false */\n////////////////////////////////////////////////////////////////////////////////\n// MAP METEOR API's\n////////////////////////////////////////////////////////////////////////////////\n\n// Access the DDP connection class\nvar _DDP;\n\ntry {\n  _DDP = Package.ddp.LivedataTest;\n  _DDP = _DDP.Connection;\n\n} catch(err) {\n  _DDP = Meteor.connection.constructor;\n}\n\n_groundUtil.Connection = _DDP;\n\nif (!_DDP) {\n  throw new Error('GroundDB cannot access the DDP.Connection class');\n}\n\n// Meteor connection\n_groundUtil.connection = _groundUtil.connection || Meteor.default_connection; // jshint ignore:line\n\n// ParseId function\n_groundUtil.idParse = LocalCollection && LocalCollection._idParse ||\n        Meteor.idParse || MongoID.idParse;\n\n// Get the database map\n_groundUtil.getDatabaseMap = function(col) {\n  // XXX: Suport older styles?\n  return col._collection._docs._map;\n};\n\n_groundUtil.setDatabaseMap = function(col, map) {\n  // XXX: Suport older styles?\n  col._collection._docs._map = map;\n};\n\n_groundUtil.invalidateDb = function(col) {\n  // We need to invalidate all listening queries\n  _.each(col._collection.queries, function(query) {\n    // This db has changed big time...\n    query.changed();\n  });\n};\n\n// State of all subscriptions in meteor\nvar _subscriptionsReady = new ReactiveVar(false);\n\n//////////////////////////// ALL SUBSCRIPTIONS READY ///////////////////////////\n\n_groundUtil.allSubscriptionsReady = function() {\n  return _subscriptionsReady.get();\n};\n\n// Could be nice to have a Meteor.allSubscriptionsReady\nvar readyInterval = Meteor.setInterval(function() {\n  if (DDP._allSubscriptionsReady()) {\n    // Stop this madness\n    Meteor.clearInterval(readyInterval);\n    // Set the reactive var\n    _subscriptionsReady.set(true);\n  }\n}, 1000);\n\n//////////////////////////////// UNDERSCORE DEPS ///////////////////////////////\n\n_groundUtil.each = _.each;\n\n_groundUtil.toArray = _.toArray;\n\n_groundUtil.extend = _.extend;\n"]}}]