{"version":3,"sources":["meteor://ðŸ’»app/collections/contacts.js"],"names":[],"mappings":";;;;;;;;AAAA,cAAc,GAAG,IAAI,YAAY,CAAC;AAChC,MAAI,EAAE;AACJ,QAAI,EAAE,MAAM;AACZ,OAAG,EAAE,CAAC;AACN,OAAG,EAAE,EAAE;GACR;AACD,OAAK,EAAE;AACL,QAAI,EAAE,MAAM;GACb;AACD,WAAS,EAAE;AACT,QAAI,EAAE,IAAI;AACV,YAAQ,EAAE,IAAI;GACf;AACD,aAAW,EAAE;AACX,QAAI,EAAE,IAAI;AACV,YAAQ,EAAE,IAAI;GACf;CACF,CAAC,CAAC;;AAEH,QAAQ,GAAG,IAAI,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;;AAE7C,IAAI,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;;AAElD,MAAM,CAAC,OAAO,CAAC;AACb,YAAU,EAAE,UAAS,GAAG,EAAE;AACxB,SAAK,CAAC,GAAG,EAAE,cAAc,CAAC,CAAC;AAC3B,QAAI,GAAG,GAAG,EAAC,IAAI,EAAE,GAAG,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC,KAAK,EAAE,SAAS,EAAE,IAAI,IAAI,IAAC,CAAC;AAClE,WAAO,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;GAC7B;AACD,aAAW,EAAE,UAAS,GAAG,EAAE;AACzB,KAAC,CAAC,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,EAAE,EAAC,WAAW,EAAE,IAAI,IAAI,IAAC,CAAC,CAAC;AACtD,SAAK,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;AACvB,SAAK,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;AAC1C,WAAO,QAAQ,CAAC,MAAM,CAAC,EAAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAC,EAAE,GAAG,CAAC,SAAS,CAAC,CAAC;GACvD;AACD,eAAa,EAAE,UAAS,EAAE,EAAE;AAC1B,SAAK,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;AAClB,WAAO,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;GAC5B;CACF,CAAC,CAAC;;AAEH,IAAK,MAAM,CAAC,QAAQ,EAAG;AACrB,QAAM,CAAC,YAAY,CAAC,CAChB,YAAY,EACZ,aAAa,EACb,eAAe,CAClB,CAAC,CAAC;CACJ,wE","file":"/collections/contacts.js","sourcesContent":["ContactsSchema = new SimpleSchema({\n  name: {\n    type: String,\n    min: 3,\n    max: 20\n  },\n  email: {\n    type: String\n  },\n  createdAt: {\n    type: Date,\n    optional: true\n  },\n  lastUpdated: {\n    type: Date,\n    optional: true\n  }\n});\n\nContacts = new Meteor.Collection('Contacts');\n\nif (Meteor.isCordova) Ground.Collection(Contacts);\n\nMeteor.methods({\n  addContact: function(doc) {\n    check(doc, ContactsSchema);\n    var obj = {name: doc.name, email: doc.email, createdAt: new Date};\n    return Contacts.insert(obj);\n  },\n  editContact: function(obj) {\n    _.extend(obj.updateDoc.$set, {lastUpdated: new Date});\n    check(obj._id, String);\n    check(obj.updateDoc.$set, ContactsSchema);\n    return Contacts.update({_id: obj._id}, obj.updateDoc);\n  },\n  removeContact: function(id) {\n    check(id, String);\n    return Contacts.remove(id);\n  }\n});\n\nif ( Meteor.isClient ) {\n  Ground.methodResume([\n      'addContact',\n      'editContact',\n      'removeContact'\n  ]);\n}"]}